<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
	<!-- console로 log 남기기 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!-- 찍어줄 로그의 형태, 시간과 로그가 찍힌 메소드, 메세지가 출력된다.-->
			<pattern>▶ [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger[%method:%line] - %msg%n</pattern>
		</encoder>
	</appender>
	
	<!--로그 파일 저장 위치-->
	<property name="LOGS_PATH" value="./log/" />
	
	<!-- 지정한 일자/시간마다 파일을 생성하면서 로그를 찍는다-->
	<appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level> <!-- 로그 레벨 지정하는 부분-->
		</filter>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<!-- 일자와 시간,분까지 지정했기때문에 1분마다 로그 파일이 생성된다.-->
			<fileNamePattern>${LOGS_PATH}openApi_%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> -->
				<!-- or whenever the file size reaches 100MB -->
			<!-- <maxFileSize>500MB</maxFileSize> -->
			<!-- </timeBasedFileNamingAndTriggeringPolicy> -->
			<!-- 로그 파일을 몇 개 생성할 건지-->
			<maxHistory>14</maxHistory>
		</rollingPolicy>

		<encoder>
			<!-- 찍어줄 로그의 형태, 시간과 로그가 찍힌 메소드, 메세지가 출력된다.-->
			<pattern>▶ [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger[%method:%line] - %msg%n</pattern>
		</encoder>

	</appender>

	<root level="debug">
		<appender-ref ref="console" />
		<appender-ref ref="logFile" />
	</root>
</configuration>
